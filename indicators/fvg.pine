// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © lalo_512

//@version=6
indicator("Fair Value Gap [ATX Lalo]", "FVG", overlay = true, max_lines_count = 500, max_boxes_count = 500)
//------------------------------------------------------------------------------
// FVG Settings
//-----------------------------------------------------------------------------{

extend = input.int(100, 'Extend', minval = 0, inline = 'extend', group = 'FVG')

bullColor = input.color(color.new(#089981, 70), "Bullish FVG", group = 'FVG')
bearColor = input.color(color.new(#f23645, 70), "Bearish FVG", group = 'FVG')


//-----------------------------------------------------------------------------}
// FVG TYPE/OBJECT
//-----------------------------------------------------------------------------{
type fvg
    float max
    float min
    bool  isbull
    int   t = time

//-----------------------------------------------------------------------------}
// Methods/Functions
//-----------------------------------------------------------------------------{
n = bar_index

fvg_detect(c1_high, c1_low, c3_high, c3_low) =>
    var new_fvg = fvg.new(na, na, false, na)
    //threshold = ta.cum((high - low) / low) / bar_index

    bull_fvg = c1_high < c3_low // Condition for bullish FVG
    bear_fvg = c1_low > c3_high // Condition for bearish FVG

    if bull_fvg
        new_fvg := fvg.new(c3_low, c1_high, true)
    else if bear_fvg
        new_fvg := fvg.new(c1_low, c3_high, false)

    [bull_fvg, bear_fvg, new_fvg]

//-----------------------------------------------------------------------------}
// FVG's detection/display
//-----------------------------------------------------------------------------{

candle1_high = high[2] // High of Candle 1 (two bars ago)
candle1_low = low[2] // Low of Candle 1 (two bars ago)
candle3_high = high // High of Candle 2 (current bar)
candle3_low = low // Low of Candle 3 (current bar)

[bull_fvg, bear_fvg, new_fvg] = fvg_detect(candle1_high, candle1_low, candle3_high, candle3_low)

var bull_count = 0, var bull_mitigated = 0
var bear_count = 0, var bear_mitigated = 0
var t = 0

var fvg_records = array.new<fvg>(0)
var fvg_areas = array.new<box>(0)

//Bull FVG's
if bull_fvg and new_fvg.t != t
    //Populate FVG array
    fvg_areas.unshift(box.new(n-2, new_fvg.max, n+extend, new_fvg.min, na, bgcolor = bullColor))
    fvg_records.unshift(new_fvg)

    bull_count += 1
    t := new_fvg.t

//Bear FVG's
if bear_fvg and new_fvg.t != t
    //Populate FVG array
    fvg_areas.unshift(box.new(n-2, new_fvg.max, n+extend, new_fvg.min, na, bgcolor = bearColor))
    fvg_records.unshift(new_fvg)

    bear_count += 1
    t := new_fvg.t

//-----------------------------------------------------------------------------}
//Unmitigated/Mitigated lines
//-----------------------------------------------------------------------------{
//Test for mitigation
if fvg_records.size() > 0
    for i = fvg_records.size()-1 to 0
        get = fvg_records.get(i)

        if get.isbull
            if close < get.min or low < ((get.min + get.max) / 2)
                //Delete box
                area = fvg_areas.remove(i)
                area.delete()

                fvg_records.remove(i)
                bull_mitigated += 1
        else if close > get.max or high > ((get.min + get.max) / 2)
            //Delete box
            area = fvg_areas.remove(i)
            area.delete()
            
            fvg_records.remove(i)
            bear_mitigated += 1

//-----------------------------------------------------------------------------}
